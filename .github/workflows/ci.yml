name: Deploy GitHub Pages

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup emsdk
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: 4.0.6
          actions-cache-folder: "emsdk-cache"

      - name: Install yarn
        run: npm install -g yarn

      - uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/pages/jquery
            ${{ github.workspace }}/pages/bootstrap
            ${{ github.workspace }}/pages/bootstrap-icons
            ${{ github.workspace }}/pages/bootstrap-multiselect
          # The hashed script contains the versions of the dependencies.
          key: ${{ hashFiles('./pages/download_packages.sh') }}

      - name: Download dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: ./pages/download_packages.sh ${{ github.workspace }}

      - name: Cache Ketcher
        id: cache-ketcher
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/pages/ketcher
          key: ${{ hashFiles('./ketcher/react-app/**/*') }}

      - name: Build Ketcher
        if: steps.cache-ketcher.outputs.cache-hit != 'true'
        run: |
          source ./pages/utils.sh
          build_ketcher ${{ github.workspace }}

      - name: Cache WASM modules
        id: cache-wasm-modules
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/pages/inchi
            ${{ github.workspace }}/pages/rinchi
          # The hashed script contains the versions of the modules.
          key: ${{ hashFiles('./pages/build_wasm_modules.sh') }}

      - name: Build WASM modules
        if: steps.cache-wasm-modules.outputs.cache-hit != 'true'
        run: |
          ./pages/build_wasm_modules.sh ${{ github.workspace }}

      - name: Test WASM modules
        if: steps.cache-wasm-modules.outputs.cache-hit != 'true'
        run: |
          cd test
          yarn install
          yarn test

      - uses: actions/configure-pages@v5

      - uses: actions/upload-pages-artifact@v3
        with:
          path: ${{github.workspace}}/pages

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
